import C from"../web_modules/globe.gl.js";import{request as p,getCoordinates as w}from"./utils/index.js";import{GLOBE_IMAGE_URL as E,BACKGROUND_IMAGE_URL as M,GEOJSON_URL as I,CASES_API as L}from"./constants.js";import*as y from"../web_modules/d3.js";const D=document.getElementById("globeViz"),P=y.scaleSequentialPow(y.interpolateYlOrRd).exponent(1/4),A=e=>e.covidData.confirmed/e.properties.POP_EST;let c,m;const $="https://corona.lmao.ninja/assets/img/flags";let o=[];o=await p("https://api.pray.zone/v2/times/day.json?city=mecca&date=2021-12-19"),O();function O(){c=C()(D).globeImageUrl(E).backgroundImageUrl(M).showGraticules(!1).polygonAltitude(.06).polygonSideColor(()=>"rgba(0, 100, 0, 0.05)").polygonStrokeColor(()=>"#111").polygonLabel(({properties:e,covidData:t})=>(e.ADMIN==="France"?m="fr":e.ADMIN==="Norway"?m="no":m=e.ISO_A2.toLowerCase(),`
        <div class="card">
          <img class="card-img" src="${$}/${m}.png" alt="flag" />
          <div class="container">
             <span class="card-title"><b> \u062A\u0648\u0642\u064A\u062A \u0627\u0645 \u0627\u0644\u0642\u0631\u0649 \u0645\u0643\u0629 \u0627\u0644\u0645\u0643\u0631\u0645\u0629  </b></span> <br />
                   
             <hr />
             <div class="card-spacer">\u0647\u062C\u0631\u064A  :    ${o.results.datetime[0].date.hijri}</div><br />
             <hr />
             <div class="card-spacer">\u0627\u0644\u0627\u0645\u0633\u0627\u0643  :    ${o.results.datetime[0].times.Imsak}</div><br />
             <span >\u0627\u0644\u0634\u0631\u0648\u0642  :    ${o.results.datetime[0].times.Sunrise}</span><br />
             <span >\u0627\u0644\u0641\u062C\u0631  :    ${o.results.datetime[0].times.Fajr}</span><br />
             <span >\u0627\u0644\u0638\u0647\u0631  :    ${o.results.datetime[0].times.Dhuhr}</span><br />
             <span >\u0627\u0644\u0639\u0635\u0631  :    ${o.results.datetime[0].times.Asr}</span><br />
             <span >\u0627\u0644\u063A\u0631\u0648\u0628  :    ${o.results.datetime[0].times.Sunset}</span><br />
             <span >\u0627\u0644\u0645\u063A\u0631\u0628  :    ${o.results.datetime[0].times.Maghrib}</span><br />
             <span >\u0627\u0644\u0639\u0634\u0627\u0621  :    ${o.results.datetime[0].times.Isha}</span><br />
             <span >\u0645\u0646\u062A\u0635\u0641 \u0627\u0644\u0644\u064A\u0644  :    ${o.results.datetime[0].times.Midnight}</span><br />
          </div>
        </div>
      `)).onPolygonHover(e=>c.polygonAltitude(t=>t===e?.21:.06).polygonCapColor(t=>t===e?"steelblue":"LightSeaGreen")).polygonsTransitionDuration(200),j()}let n=[],i=[],l=[],N=[];const d=document.querySelector(".play-button"),a=document.querySelector(".slider"),g=document.querySelector(".slider-date");function U(e,t=.5,s=10){let u=[];for(let r=0;r<s;r++){const b=t*Math.cos(2*Math.PI*r/s),S=t*Math.sin(2*Math.PI*r/s);u.push([e[0]+b,e[1]+S])}return[u]}async function j(){i=await p(L),l=(await p(I)).features,document.querySelector(".title-desc").innerHTML="\u0648\u064E\u0623\u0652\u0645\u064F\u0631\u0652 \u0623\u064E\u0647\u0652\u0644\u064E\u0643\u064E \u0628\u0650\u0671\u0644\u0635\u064E\u0651\u0644\u064E\u0648\u0670\u0629\u0650 \u0648\u064E\u0671\u0635\u0652\u0637\u064E\u0628\u0650\u0631\u0652 \u0639\u064E\u0644\u064E\u064A\u0652\u0647\u064E\u0627",n=Object.keys(i.China),a.max=n.length-1,a.value=n.length-1,a.disabled=!1,d.disabled=!1,f(),v(),q()}const k=document.querySelector("#infected"),R=document.querySelector("#deaths"),V=document.querySelector("#recovered"),B=document.querySelector(".updated");function f(){g.innerHTML=n[a.value];let e=0,t=0,s=0;Object.keys(i).forEach(u=>{if(i[u][n[a.value]]){const r=i[u][n[a.value]];e+=+r.confirmed,t+=+r.deaths,s+=r.recoveries?+r.recoveries:0}})}function v(){for(let t=0;t<l.length;t++){const s=l[t].properties.NAME;i[s]?l[t].covidData={confirmed:i[s][n[a.value]].confirmed,deaths:i[s][n[a.value]].deaths,recoveries:i[s][n[a.value]].recoveries}:l[t].covidData={confirmed:0,deaths:0,recoveries:0}}const e=Math.max(...l.map(A));P.domain([0,e]),c.polygonsData(l)}async function q(){try{const{latitude:e,longitude:t}=await w();c.pointOfView({lat:e,lng:t},1e3)}catch(e){console.log("Unable to set point of view.")}}let h;d.addEventListener("click",()=>{if(d.innerText==="Play")d.innerText="Pause";else{d.innerText="Play",clearInterval(h);return}+a.value===n.length-1&&(a.value=0),g.innerHTML=n[a.value],h=setInterval(()=>{a.value++,g.innerHTML=n[a.value],f(),v(),+a.value===n.length-1&&(d.innerHTML="Play",clearInterval(h))},200)}),"oninput"in a&&a.addEventListener("input",function(){f(),v()},!1),window.addEventListener("resize",e=>{c.width([e.target.innerWidth]),c.height([e.target.innerHeight])});
